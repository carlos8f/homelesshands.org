Index: includes/install.core.inc
===================================================================
RCS file: /cvs/drupal/drupal/includes/install.core.inc,v
retrieving revision 1.22
diff -u -p -r1.22 install.core.inc
--- includes/install.core.inc	5 Jun 2010 12:02:33 -0000	1.22
+++ includes/install.core.inc	22 Jun 2010 19:56:18 -0000
@@ -345,13 +345,12 @@ function install_run_tasks(&$install_sta
     $install_state['parameters_changed'] = ($install_state['parameters'] != $original_parameters);
     // Store this task as having been performed during the current request,
     // and save it to the database as completed, if we need to and if the
-    // database is in a state that allows us to do so. Also mark the
-    // installation as 'done' when we have run out of tasks.
+    // database is in a state that allows us to do so.
     if (!$install_state['task_not_complete']) {
       $install_state['tasks_performed'][] = $task_name;
       $install_state['installation_finished'] = empty($tasks_to_perform);
-      if ($install_state['database_tables_exist'] && ($task['run'] == INSTALL_TASK_RUN_IF_NOT_COMPLETED || $install_state['installation_finished'])) {
-        variable_set('install_task', $install_state['installation_finished'] ? 'done' : $task_name);
+      if (!$install_state['installation_finished'] && $install_state['database_tables_exist'] && $task['run'] == INSTALL_TASK_RUN_IF_NOT_COMPLETED) {
+        variable_set('install_task', $task_name);
       }
     }
     // Stop when there are no tasks left. In the case of an interactive
@@ -1475,6 +1474,9 @@ function install_finished(&$install_stat
   $output = '<p>' . st('Congratulations, you installed @drupal!', array('@drupal' => drupal_install_profile_distribution_name())) . '</p>';
   $output .= '<p>' . (isset($messages['error']) ? st('Review the messages above before visiting <a href="@url">your new site</a>.', array('@url' => url(''))) : st('<a href="@url">Visit your new site</a>.', array('@url' => url('')))) . '</p>';
 
+  // Mark the installation as having completed.
+  variable_set('install_task', 'done');
+
   // Flush all caches to ensure that any full bootstraps during the installer
   // do not leave stale cached data, and that any content types or other items
   // registered by the install profile are registered correctly.
@@ -1499,7 +1501,9 @@ function install_finished(&$install_stat
   // Run cron to populate update status tables (if available) so that users
   // will be warned if they've installed an out of date Drupal version.
   // Will also trigger indexing of profile-supplied content or feeds.
-  drupal_cron_run();
+  // Profiles may choose to opt out of auto cron by calling
+  // variable_set('cron_safe_threshold', 0).
+  system_run_automated_cron();
 
   return $output;
 }
Index: modules/system/system.module
===================================================================
RCS file: /cvs/drupal/drupal/modules/system/system.module,v
retrieving revision 1.939
diff -u -p -r1.939 system.module
--- modules/system/system.module	21 Jun 2010 02:27:47 -0000	1.939
+++ modules/system/system.module	22 Jun 2010 19:56:19 -0000
@@ -3283,7 +3283,7 @@ function system_page_alter(&$page) {
  * Run the automated cron if enabled.
  */
 function system_run_automated_cron() {
-  if (($threshold = variable_get('cron_safe_threshold', DRUPAL_CRON_DEFAULT_THRESHOLD)) > 0) {
+  if (variable_get('install_task') == 'done' && ($threshold = variable_get('cron_safe_threshold', DRUPAL_CRON_DEFAULT_THRESHOLD)) > 0) {
     $cron_last = variable_get('cron_last', NULL);
     if (!isset($cron_last) || (REQUEST_TIME - $cron_last > $threshold)) {
       drupal_cron_run();
